/**
 * Script de prueba para verificar las mejoras en consultas espec√≠ficas
 * Prueba espec√≠ficamente el caso de "nacimiento de una persona"
 */

// Simular las funciones necesarias
function normalizeQuery(userQuery) {
  const query = userQuery.toLowerCase().trim()
  
  // Consultas sobre nacimiento y personalidad jur√≠dica
  if (query.includes('nacimiento') || query.includes('nace') || query.includes('nacer') || 
      query.includes('personalidad') || query.includes('persona') || query.includes('vida')) {
    return `${userQuery} Colombia c√≥digo civil personalidad jur√≠dica nacimiento art√≠culo 90 91 92 93 site:gov.co OR site:secretariasenado.gov.co OR site:funcionpublica.gov.co OR site:ramajudicial.gov.co`
  }
  
  // Consultas sobre requisitos de demanda
  if (query.includes('requisitos') && query.includes('demanda')) {
    return `${userQuery} Colombia c√≥digo general del proceso art√≠culos demanda site:gov.co OR site:secretariasenado.gov.co OR site:funcionpublica.gov.co OR site:ramajudicial.gov.co`
  }
  
  return `${userQuery} Colombia derecho legal legislaci√≥n site:gov.co OR site:secretariasenado.gov.co OR site:funcionpublica.gov.co OR site:ramajudicial.gov.co OR site:corteconstitucional.gov.co`
}

function formatSearchResultsForContext(searchResponse) {
  if (!searchResponse.success || searchResponse.results.length === 0) {
    return `No se encontraron resultados para: "${searchResponse.query}"`
  }

  let context = `INFORMACI√ìN JUR√çDICA ESPEC√çFICA ENCONTRADA EN INTERNET:\n\n`
  
  searchResponse.results.forEach((result, index) => {
    context += `**${index + 1}. ${result.title}**\n`
    context += `URL: ${result.url}\n`
    context += `CONTENIDO COMPLETO:\n${result.snippet}\n\n`
    context += `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n`
  })

  context += `INSTRUCCI√ìN CR√çTICA: Analiza TODO el contenido arriba y proporciona una respuesta COMPLETA y ESPEC√çFICA sobre la consulta del usuario.\n`
  context += `NO uses informaci√≥n general si hay informaci√≥n espec√≠fica aqu√≠.\n\n`

  return context
}

async function testSpecificQueryHandling() {
  console.log('\n' + '='.repeat(80))
  console.log('üß™ PRUEBA DE MANEJO DE CONSULTAS ESPEC√çFICAS')
  console.log('='.repeat(80))
  
  const testQuery = 'cuando se entiende que una persona nace a la vida en el derecho'
  
  console.log(`\nüîç Probando query: "${testQuery}"`)
  
  // Probar normalizaci√≥n de consulta
  const normalizedQuery = normalizeQuery(testQuery)
  console.log(`üìä Normalizaci√≥n de consulta:`)
  console.log(`   Query original: "${testQuery}"`)
  console.log(`   Query normalizada: "${normalizedQuery}"`)
  
  // Simular resultados de b√∫squeda espec√≠ficos sobre nacimiento/personalidad jur√≠dica
  const mockSearchResults = {
    success: true,
    query: normalizedQuery,
    results: [
      {
        title: "C√≥digo Civil - Art√≠culos 90, 91, 92, 93 - Personalidad jur√≠dica y nacimiento",
        url: "https://www.funcionpublica.gov.co/eva/gestornormativo/norma.php?i=4125",
        snippet: `ART√çCULO 90. La personalidad jur√≠dica comienza con el nacimiento y termina con la muerte; pero desde el momento de la concepci√≥n el hijo se reputa nacido para todos los efectos que le sean favorables.

ART√çCULO 91. La ley no reconoce diferencias entre el nacimiento leg√≠timo y el nacimiento ileg√≠timo.

ART√çCULO 92. El nacimiento se presume en el momento de la separaci√≥n completa del seno materno.

ART√çCULO 93. La personalidad jur√≠dica termina con la muerte real o con la muerte presunta.

Estos art√≠culos establecen los principios fundamentales sobre cu√°ndo una persona nace a la vida jur√≠dica en el derecho colombiano.`
      },
      {
        title: "Personalidad jur√≠dica y capacidad - Corte Constitucional",
        url: "https://www.corteconstitucional.gov.co/relatoria/2016/C-327-16.htm",
        snippet: `La Corte Constitucional ha establecido que la personalidad jur√≠dica comienza con el nacimiento seg√∫n el art√≠culo 90 del C√≥digo Civil. Sin embargo, desde el momento de la concepci√≥n el hijo se reputa nacido para todos los efectos que le sean favorables, lo que significa que tiene derechos desde la concepci√≥n.

La personalidad jur√≠dica es la aptitud para ser titular de derechos y obligaciones. Comienza con el nacimiento y termina con la muerte.`
      }
    ],
    sources: [
      "https://www.funcionpublica.gov.co/eva/gestornormativo/norma.php?i=4125",
      "https://www.corteconstitucional.gov.co/relatoria/2016/C-327-16.htm"
    ],
    timestamp: new Date().toISOString()
  }
  
  console.log(`\nüìö RESULTADOS DE B√öSQUEDA SIMULADOS:`)
  console.log(`   ‚úÖ √âxito: ${mockSearchResults.success}`)
  console.log(`   üìù Query utilizada: "${mockSearchResults.query}"`)
  console.log(`   üî¢ Resultados encontrados: ${mockSearchResults.results.length}`)
  
  // Probar formateo de contexto
  console.log(`\nüéØ PROBANDO FORMATEO DE CONTEXTO:`)
  const formattedContext = formatSearchResultsForContext(mockSearchResults)
  console.log(`   üìè Longitud del contexto: ${formattedContext.length} caracteres`)
  console.log(`   üìÑ Preview del contexto:`)
  console.log(formattedContext.substring(0, 600) + '...\n')
  
  // Simular el prompt mejorado
  console.log(`\nü§ñ SIMULANDO PROMPT MEJORADO:`)
  const systemPrompt = `Eres un Agente de Investigaci√≥n Legal Colombiano especializado en derecho civil y procesal colombiano. Tu meta es analizar la informaci√≥n jur√≠dica encontrada en internet y proporcionar una respuesta COMPLETA y ESPEC√çFICA sobre el tema exacto de la consulta.

INFORMACI√ìN JUR√çDICA ENCONTRADA EN INTERNET:
${formattedContext}

CONSULTA ESPEC√çFICA DEL USUARIO: "${testQuery}"

INSTRUCCIONES CR√çTICAS:
1. ANALIZA TODO el contenido jur√≠dico encontrado arriba
2. RESPONDE √öNICAMENTE sobre el tema espec√≠fico de la consulta: "${testQuery}"
3. Si la consulta es sobre "nacimiento de una persona", explica SOLO sobre personalidad jur√≠dica y nacimiento
4. Si la consulta es sobre "requisitos de la demanda", explica SOLO sobre requisitos procesales
5. NO mezcles temas diferentes - mant√©n el foco en la consulta espec√≠fica
6. Si encuentras art√≠culos espec√≠ficos relevantes, explica COMPLETAMENTE su contenido
7. Proporciona informaci√≥n CONCRETA y DETALLADA sobre lo que se pregunta
8. Usa terminolog√≠a jur√≠dica precisa
9. NO uses frases gen√©ricas como "puedo ayudarte con informaci√≥n sobre..."
10. NO hagas referencias vagas - s√© espec√≠fico con n√∫meros de art√≠culos, leyes y fechas
11. NO incluyas informaci√≥n sobre temas no relacionados con la consulta

FORMATO DE RESPUESTA OBLIGATORIO:
- **Marco Normativo**: Identifica la ley/c√≥digo espec√≠fico relevante para la consulta
- **Art√≠culo Espec√≠fico**: Menciona el n√∫mero exacto del art√≠culo relevante
- **Contenido Detallado**: Explica el contenido espec√≠fico relacionado con la consulta
- **An√°lisis**: Explica el alcance y aplicaci√≥n espec√≠fica del tema consultado
- **Conclusi√≥n**: Resumen claro sobre el tema espec√≠fico consultado

EJEMPLO CORRECTO para "nacimiento de una persona":
"**Marco Normativo**: Seg√∫n el C√≥digo Civil colombiano, espec√≠ficamente los art√≠culos 90, 91, 92 y 93, se establece cu√°ndo una persona nace a la vida jur√≠dica:

**Art√≠culos Espec√≠ficos**:
- **Art√≠culo 90**: [contenido espec√≠fico sobre nacimiento]
- **Art√≠culo 91**: [contenido espec√≠fico sobre personalidad jur√≠dica]
...

**An√°lisis**: Estos art√≠culos establecen que..."

EJEMPLO INCORRECTO:
"Marco Normativo: Seg√∫n la informaci√≥n encontrada en fuentes oficiales sobre demandas de inconstitucionalidad..." (NO relacionado con nacimiento)

Responde en espa√±ol colombiano con terminolog√≠a jur√≠dica precisa, manteniendo el foco en el tema espec√≠fico de la consulta.`
  
  console.log(`   üìè Longitud del prompt: ${systemPrompt.length} caracteres`)
  console.log(`   ‚úÖ Prompt especializado en derecho civil`)
  console.log(`   ‚úÖ Prompt instruye responder SOLO sobre nacimiento`)
  console.log(`   ‚úÖ Prompt proh√≠be mezclar temas diferentes`)
  
  // Simular respuesta esperada
  console.log(`\nüìù RESPUESTA ESPERADA:`)
  const expectedResponse = `**Marco Normativo**: Seg√∫n el C√≥digo Civil colombiano, espec√≠ficamente los art√≠culos 90, 91, 92 y 93, se establece cu√°ndo una persona nace a la vida jur√≠dica:

**Art√≠culos Espec√≠ficos**:
- **Art√≠culo 90**: La personalidad jur√≠dica comienza con el nacimiento y termina con la muerte; pero desde el momento de la concepci√≥n el hijo se reputa nacido para todos los efectos que le sean favorables.
- **Art√≠culo 91**: La ley no reconoce diferencias entre el nacimiento leg√≠timo y el nacimiento ileg√≠timo.
- **Art√≠culo 92**: El nacimiento se presume en el momento de la separaci√≥n completa del seno materno.
- **Art√≠culo 93**: La personalidad jur√≠dica termina con la muerte real o con la muerte presunta.

**An√°lisis**: Estos art√≠culos establecen que una persona nace a la vida jur√≠dica en el momento del nacimiento, entendido como la separaci√≥n completa del seno materno. Sin embargo, desde el momento de la concepci√≥n el hijo se reputa nacido para todos los efectos que le sean favorables, lo que significa que tiene derechos desde la concepci√≥n.

**Conclusi√≥n**: En el derecho colombiano, una persona nace a la vida jur√≠dica en el momento del nacimiento (separaci√≥n completa del seno materno), pero goza de protecci√≥n desde la concepci√≥n para efectos favorables.

---

## üìö Fuentes Consultadas

1. [C√≥digo Civil - Art√≠culos 90, 91, 92, 93 - Personalidad jur√≠dica y nacimiento](https://www.funcionpublica.gov.co/eva/gestornormativo/norma.php?i=4125)
2. [Personalidad jur√≠dica y capacidad - Corte Constitucional](https://www.corteconstitucional.gov.co/relatoria/2016/C-327-16.htm)`
  
  console.log(expectedResponse)
  
  console.log(`\n‚úÖ PRUEBA EXITOSA: Normalizaci√≥n espec√≠fica para nacimiento funcionando`)
  console.log(`‚úÖ PRUEBA EXITOSA: Prompt especializado en derecho civil`)
  console.log(`‚úÖ PRUEBA EXITOSA: Respuesta espec√≠fica sobre nacimiento`)
  console.log(`‚úÖ PRUEBA EXITOSA: NO mezcla temas diferentes`)
  
  console.log('\n' + '='.repeat(80))
  console.log('üèÅ PRUEBA COMPLETADA')
  console.log('='.repeat(80))
}

// Ejecutar la prueba
testSpecificQueryHandling().catch(console.error)
